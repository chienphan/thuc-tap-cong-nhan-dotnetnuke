#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.233
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GobomDNN.Modules.GobomModuleNews.Components
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="gobom")]
	public partial class GobomNewsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertgobom_Tag(gobom_Tag instance);
    partial void Updategobom_Tag(gobom_Tag instance);
    partial void Deletegobom_Tag(gobom_Tag instance);
    partial void Insertgobom_New(gobom_New instance);
    partial void Updategobom_New(gobom_New instance);
    partial void Deletegobom_New(gobom_New instance);
    #endregion
		
		public GobomNewsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["gobomConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GobomNewsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GobomNewsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GobomNewsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GobomNewsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<gobom_Tag> gobom_Tags
		{
			get
			{
				return this.GetTable<gobom_Tag>();
			}
		}
		
		public System.Data.Linq.Table<gobom_New> gobom_News
		{
			get
			{
				return this.GetTable<gobom_New>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[gobom.Tag]")]
	public partial class gobom_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TagName;
		
		private EntityRef<gobom_New> _gobom_New;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    #endregion
		
		public gobom_Tag()
		{
			this._gobom_New = default(EntityRef<gobom_New>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._gobom_New.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagName", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this.OnTagNameChanging(value);
					this.SendPropertyChanging();
					this._TagName = value;
					this.SendPropertyChanged("TagName");
					this.OnTagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gobom_New_gobom_Tag", Storage="_gobom_New", ThisKey="ID", OtherKey="IDTag", IsForeignKey=true)]
		public gobom_New gobom_New
		{
			get
			{
				return this._gobom_New.Entity;
			}
			set
			{
				gobom_New previousValue = this._gobom_New.Entity;
				if (((previousValue != value) 
							|| (this._gobom_New.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gobom_New.Entity = null;
						previousValue.gobom_Tags.Remove(this);
					}
					this._gobom_New.Entity = value;
					if ((value != null))
					{
						value.gobom_Tags.Add(this);
						this._ID = value.IDTag;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("gobom_New");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[gobom.News]")]
	public partial class gobom_New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDTag;
		
		private string _Title;
		
		private string _Contents;
		
		private string _ImageURL;
		
		private string _DateCreate;
		
		private string _DateModified;
		
		private string _Poster;
		
		private EntitySet<gobom_Tag> _gobom_Tags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDTagChanging(int value);
    partial void OnIDTagChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnDateCreateChanging(string value);
    partial void OnDateCreateChanged();
    partial void OnDateModifiedChanging(string value);
    partial void OnDateModifiedChanged();
    partial void OnPosterChanging(string value);
    partial void OnPosterChanged();
    #endregion
		
		public gobom_New()
		{
			this._gobom_Tags = new EntitySet<gobom_Tag>(new Action<gobom_Tag>(this.attach_gobom_Tags), new Action<gobom_Tag>(this.detach_gobom_Tags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTag", DbType="Int NOT NULL")]
		public int IDTag
		{
			get
			{
				return this._IDTag;
			}
			set
			{
				if ((this._IDTag != value))
				{
					this.OnIDTagChanging(value);
					this.SendPropertyChanging();
					this._IDTag = value;
					this.SendPropertyChanged("IDTag");
					this.OnIDTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="Text NOT NULL", CanBeNull=false)]
		public string DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="Text")]
		public string DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poster", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Poster
		{
			get
			{
				return this._Poster;
			}
			set
			{
				if ((this._Poster != value))
				{
					this.OnPosterChanging(value);
					this.SendPropertyChanging();
					this._Poster = value;
					this.SendPropertyChanged("Poster");
					this.OnPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gobom_New_gobom_Tag", Storage="_gobom_Tags", ThisKey="IDTag", OtherKey="ID")]
		public EntitySet<gobom_Tag> gobom_Tags
		{
			get
			{
				return this._gobom_Tags;
			}
			set
			{
				this._gobom_Tags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_gobom_Tags(gobom_Tag entity)
		{
			this.SendPropertyChanging();
			entity.gobom_New = this;
		}
		
		private void detach_gobom_Tags(gobom_Tag entity)
		{
			this.SendPropertyChanging();
			entity.gobom_New = null;
		}
	}
}
#pragma warning restore 1591
