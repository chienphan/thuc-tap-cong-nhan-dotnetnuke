// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DotNetNuke.Tests.Website.DesktopModules.CoreMessaging
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Compose a Message")]
    public partial class ComposeAMessageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ComposeMessage.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Compose a Message", "In order to Send a message \r\nAs a user\r\nI want to be able to send a message to ot" +
                    "her users", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sending a Message to a Role")]
        [NUnit.Framework.TestCaseAttribute("philip.beadle", "password", "Administrators", "Registered Users", "DotNetNuke Rox!", "We love DotNetNuke.", new string[0])]
        public virtual void SendingAMessageToARole(string scenarioUserName, string scenarioPassword, string scenarioRole, string to, string subject, string message, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sending a Message to a Role", exampleTags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given(string.Format("Login as UID={0} PWD={1} Role={2}", scenarioUserName, scenarioPassword, scenarioRole));
#line 8
 testRunner.When("Click the Check Messages button located beside your display name in the top right" +
                    " corner of any page");
#line 9
 testRunner.And("Click the Compose New Message button or link");
#line 10
 testRunner.And(string.Format("In the Send to text box, begin typing in the user name, first name or last name o" +
                        "f the message recipient or the name of the Role {0}", to));
#line 11
 testRunner.And(string.Format("In the Subject text box, enter the subject of this message {0}", subject));
#line 12
 testRunner.And(string.Format("In the Your Message text box, enter the body of this message {0}", message));
#line 13
 testRunner.And("Click the Send button");
#line 14
 testRunner.Then(string.Format("A summary of the sent message is now displayed in the Message Center {0}", subject));
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
